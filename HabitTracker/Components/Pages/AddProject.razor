@page "/projects/add"
@inject HabitTracker.Services.IProjectService ProjectService
@inject NavigationManager NavigationManager
@using HabitTracker.Models
@rendermode InteractiveServer // Or InteractiveAuto if configured

<PageTitle>Add New Project</PageTitle>

<h1>Add New Project</h1>
<hr class="mb-4"/>

<div class="card shadow-sm">
    <div class="card-body">
        <EditForm Model="@newProject" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator /> @* Enables validation based on model attributes *@

            <div class="mb-3">
                <label for="projectName" class="form-label">Project Name</label>
                <InputText id="projectName" class="form-control" @bind-Value="newProject.Name" />
                <ValidationMessage For="@(() => newProject.Name)" />
            </div>

            <div class="mb-3">
                <label for="projectDescription" class="form-label">Description (Optional)</label>
                <InputTextArea id="projectDescription" class="form-control" @bind-Value="newProject.Description" rows="3" />
                 <ValidationMessage For="@(() => newProject.Description)" />
            </div>

            <div class="d-flex justify-content-end gap-2">
                 <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button>
                 <button type="submit" class="btn btn-primary">
                     <i class="bi bi-save me-2"></i>Save Project
                 </button>
            </div>

             @* Optional: Show validation summary at the bottom *@
             @* <ValidationSummary /> *@

        </EditForm>
    </div>
</div>


@code {
    private Project newProject = new();

    private async Task HandleValidSubmit()
    {
        try
        {
            await ProjectService.AddProjectAsync(newProject);
            NavigationManager.NavigateTo("/projects"); // Navigate back to list after saving
        }
        catch(Exception ex)
        {
             // TODO: Show error message to user
            Console.WriteLine($"Error adding project: {ex.Message}");
        }
    }

    private void Cancel()
    {
         NavigationManager.NavigateTo("/projects");
    }
}